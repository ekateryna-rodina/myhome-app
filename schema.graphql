### This file was generated by Nexus Schema
### Do not make changes to this file directly


input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

type Property {
  baths: String!
  beds: Int!
  city: String!
  country: String!
  id: Int!
  photo: String!
  size: Int!
  title: String!
}

input PropertyWhereInput {
  AND: [PropertyWhereInput!]
  NOT: [PropertyWhereInput!]
  OR: [PropertyWhereInput!]
  baths: StringFilter
  beds: IntFilter
  city: StringFilter
  country: StringFilter
  id: IntFilter
  photo: StringFilter
  size: IntFilter
  title: StringFilter
}

input PropertyWhereUniqueInput {
  id: Int
}

type Query {
  properties(after: PropertyWhereUniqueInput, before: PropertyWhereUniqueInput, first: Int, last: Int, where: PropertyWhereInput): [Property!]!
  property(where: PropertyWhereUniqueInput!): Property
}

enum QueryMode {
  default
  insensitive
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}
